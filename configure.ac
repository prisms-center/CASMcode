#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ([2.69])
AC_INIT([CASM],
        m4_esyscmd([tr -d '\n' < ./build-aux/casm_version.txt]),
        [casm-developers@lists.engr.ucsb.edu],
        [],
        [https://github.com/prisms-center/CASMcode])
AC_CONFIG_AUX_DIR([build-aux]) #This is my doing
AC_CONFIG_MACRO_DIR([build-aux/m4])
#Rules to apply to every Makefile.am. Using tar-ustar due to loooooong file names (I'm looking at you Eigen)
AM_INIT_AUTOMAKE([foreign subdir-objects 1.9 tar-ustar])


AC_CONFIG_SRCDIR([src/casm/CASM_global_definitions.cc])
AC_CONFIG_HEADERS([config.h])

# Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP

## Checks for libraries.
AC_SEARCH_LIBS([dlopen], [dl], [], AC_MSG_ERROR(dlopen from dl library not found!))
AX_CHECK_ZLIB(,[AC_MSG_ERROR([Could not find zlib])])

#I added this
LT_INIT([shared disable-static])
AC_PROG_LIBTOOL
LT_LIB_DLLOAD
AC_DISABLE_STATIC
if test "$enable_static" != "no"; then
    echo "Sorry Dave, I can't let you do that. Static libraries are currently disabled.";
    exit 1;
fi; 

AX_CXX_COMPILE_STDCXX_11
BOOSTV=1.54
AX_BOOST_BASE([$BOOSTV],[],AC_MSG_ERROR(You need Boost $BOOSTV libraries or higher.))
AX_BOOST_FILESYSTEM
AX_BOOST_SYSTEM
AX_BOOST_REGEX
AX_BOOST_CHRONO
AX_BOOST_PROGRAM_OPTIONS
AX_BOOST_UNIT_TEST_FRAMEWORK

#Where to install bash completion
AC_ARG_WITH([bash-completion-dir],
    AS_HELP_STRING([--with-bash-completion-dir[=PATH]],
        [Install the bash auto-completion script in this directory. @<:@default=no@:>@]),
    [],
    [with_bash_completion_dir=no])

if test "x$with_bash_completion_dir" = "xyes"; then
    PKG_CHECK_MODULES([BASH_COMPLETION], [bash-completion >= 2.0],
        [BASH_COMPLETION_DIR="`pkg-config --variable=completionsdir bash-completion`"],
        [BASH_COMPLETION_DIR="$datadir/bash-completion/completions"])
else
    BASH_COMPLETION_DIR="$with_bash_completion_dir"
fi

AC_SUBST([BASH_COMPLETION_DIR])
AM_CONDITIONAL([ENABLE_BASH_COMPLETION],[test "x$with_bash_completion_dir" != "xno"])


#Require at least this version
AM_PATH_PYTHON([2.6])

# Checks for header files.
AC_CHECK_HEADERS([float.h limits.h stdlib.h string.h sys/time.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_CHECK_HEADER_STDBOOL
AC_C_INLINE
AC_TYPE_INT32_T
AC_TYPE_INT64_T
AC_C_RESTRICT
AC_TYPE_SIZE_T
AC_TYPE_UINT64_T
AC_CHECK_TYPES([ptrdiff_t])

# Checks for library functions.
AC_FUNC_ERROR_AT_LINE
AC_FUNC_MALLOC
AC_HEADER_MAJOR
AC_FUNC_REALLOC
AC_FUNC_STRTOD
AC_CHECK_FUNCS([floor iswprint memmove memset mkdir pow rmdir select sqrt strchr strpbrk strrchr strstr strtol])

#Generate all the necessary files from *.in
AC_CONFIG_FILES([Makefile])

#============================================================#
#The following are generated by make_Makemodule.py:
# BEGIN MAKEMODULE
AC_CONFIG_FILES([tests/unit/App/run_test_App], [chmod +x tests/unit/App/run_test_App])
AC_CONFIG_FILES([tests/unit/casm_io/run_test_casm_io], [chmod +x tests/unit/casm_io/run_test_casm_io])
AC_CONFIG_FILES([tests/unit/clex/run_test_clex], [chmod +x tests/unit/clex/run_test_clex])
AC_CONFIG_FILES([tests/unit/clusterography/run_test_clusterography], [chmod +x tests/unit/clusterography/run_test_clusterography])
AC_CONFIG_FILES([tests/unit/container/run_test_container], [chmod +x tests/unit/container/run_test_container])
AC_CONFIG_FILES([tests/unit/crystallography/run_test_crystallography], [chmod +x tests/unit/crystallography/run_test_crystallography])
AC_CONFIG_FILES([tests/unit/monte_carlo/run_test_monte_carlo], [chmod +x tests/unit/monte_carlo/run_test_monte_carlo])
AC_CONFIG_FILES([tests/unit/system/run_test_system], [chmod +x tests/unit/system/run_test_system])
# END MAKEMODULE
#============================================================#

AC_OUTPUT
